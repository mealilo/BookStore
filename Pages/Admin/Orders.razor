@page "/admin/orders"
@inherits OwningComponentBase<IDonationsRepository>
<h3>Orders</h3>

<h3>I should do something!</h3>
<OrderTable TableTitle="Not Shipped Orders" Orders="UnshippedOrders" ButtonLabel="Ship" DonationSelected="ResetOrder"></OrderTable>
<OrderTable TableTitle=" Shipped Orders" Orders="ShippedOrders" ButtonLabel="Unship" DonationSelected="ShipOrder"></OrderTable>


<button class="btn btn-info" @onclick="@(x => UpdateData())"> Refresh Data</button>
@code {
    public IDonationsRepository repo => Service;

    public IEnumerable<Donation> AllOrders { get; set; }
    public IEnumerable<Donation> UnshippedOrders { get; set; }
    public IEnumerable<Donation> ShippedOrders { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllOrders = await repo.Donations.ToListAsync();
        UnshippedOrders = AllOrders.Where(x => !x.OrderShipped);
        ShippedOrders = AllOrders.Where(x => x.OrderShipped);

    }

    public void ShipOrder(int id) => UpdateOrder(id, true);

    public void ResetOrder(int id) => UpdateOrder(id, false);

    private void UpdateOrder(int id, bool shipped)
    {
        Donation d = repo.Donations.FirstOrDefault(x => x.DonationId == id);
        d.OrderShipped = shipped;
        repo.SaveDonation(d);
    }

}